#!/usr/bin/python
# -*- coding: utf-8 -*-
"""
Created on Wed Jan 22 15:52:24 2014
Script to plot the seismograms generated by SPECFEM2D.
The arguments must be correct paths to existing 2D seismogram files or
an existing option (-hold,-grid,-x)
@author: Alexis Bottero (alexis.bottero@gmail.com)
"""
### --- MODULES AND PACKAGES --- ###
import numpy as np # NumPy (multidimensional arrays, linear algebra, ...)
import matplotlib as mpl # Matplotlib (2D/3D plotting library)
import matplotlib.pyplot as plt # Matplotlib's pyplot: MATLAB-like syntax
from pylab import * # Matplotlib's pylab interface
from os.path import exists
import sys

# We could create a dictionnary that associate each option (-hold for ex) to
# its meaning
message="The arguments must be correct paths to existing 2D seismogram files \
or an existing option (-hold,-grid,-x)"
ArgumentList=sys.argv
FileList=[]
correctCall,hold,grid,crosses=False,False,False,False
for arg in ArgumentList[1:]: # The first argument is the name of the program
    if arg == '-hold':
        hold=True
        correctCall=True
    elif arg == '-grid':
        grid=True
        correctCall=True
    elif arg == '-x':
        crosses=True
        correctCall=True
    elif exists(arg):
        FileList.append(arg)
        correctCall=True
    else:
        print 'Argument : \"',arg,'\" is not a correct path to an existing seismogram \
file or an existing option (-hold,-grid,-x). It will be ignored...'
if correctCall is False:
    print 'None of the arguments given is correct. ',message
    sys.exit(0)

for seismo in FileList:
    data = np.loadtxt(seismo)
    t,u = data[:,0],data[:,1]
    if hold is not True:
        figure()
    if crosses:
        plt.plot(t,u,'x')
    else:
        plt.plot(t,u)
    if grid:
        plt.grid(True)
    if hold:
        plt.hold(True)
    else:
        plt.hold(False)
        plt.title(seismo)
    plt.xlim([t[0],t[-1]])
plt.show() 
