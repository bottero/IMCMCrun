########### ----------- CONFIGURATION FILE FOR IMCMC ----------- ###########
# Convenient syntax highlighting : Ruby 
# (But SPARQL, BOO, DPatch, GAP, gettext translation, GtkRC, Julia, m4, Octave, Perl, Puppet, Python, R, sh, Tcl are also good)
############################################################################

### --- Output options --- ###
VERBOSE1 = 0                  # To display more details
VERBOSE2 = 0                  # To display even more details
VIEW = 50                     # Every how many iterations we display a percentage done
N_PRIOR_PROFILES = 10    # Number of profiles from a priori space generated in initialization
QP = 0.95               # Ratio of the values on the quantile chosen (ex : 0.95 -> 95%)
N_BEST_PROFILES = 2    # Number of different good profiles kept
ITERATIONS_BEST_PROFILES = 1000 # Every how many iterations do we write best profiles on files (!! warning !! Costly, do not put a small value)
COMPUTE_RESIDUALS = 1   # Do we re-compute residuals for the best model?
ITERATIONS_RESIDUALS = 200 # If COMPUTE_RESIDUALS = 1, every how many iterations do we recompute residuals for the best model? 
                           #(!! warning !! Costly, do not put a small value)
### Full path to the directory that contains the data files ### (!! must finish by / so far !!)
DATA_DIRECTORY = /home/bottero/Dropbox/Travail/StageLMA/DonneesRealistesLMA/IMCMCrun/examples/RealCaseStudy/dataExample/

### --- General options --- ###
NPU = 10          # Number of parameters used to describe P (or S if SWAVES = 1) waves velocity profiles
NIT = 10000        # Default number of iterations
NBT = 4          # Number of temperatures (Number of Markov chains in parallel)
TMAX = 1000        # Defaut maximum temperature
PEE = 0.25       # Probability of allowing swapping
DI = 5.0         # DI and DF define the standard variation range of the states with the temperature : 
DF = 7.0        # At T=Tmax (maxParameters-minParameters)/DI and at T=1 deltaState=(maxParameters-minParameters)/DF
NC = 2,2,2,2,2,20 # Number of components to modify in a MH iteration as a function of T. Example with 100 parameters and 4 temperatures :
# NC = 5,20,50,80 -> at each iteration 5 parameters of the lowest temperature chain can change (80 parameters of the highest)
SWAVES = 1         # To work with S waves (has never been tested without!!!)
RECALCULATE_T0 = 1 # Recalculate the origin time for each shot
SIGMAP = 0.005    # Standard deviation of the P arrival times picked (or calculated if ANALYTICAL_RUN = 1)
SIGMAS = 0.01     # Standard deviation of the S arrival times picked (or calculated if ANALYTICAL_RUN = 1)

### ----- First guess profiles ---- ###
NAME_OF_FIRST_GUESS_P_FILE = logPreal.txt #firstGuessPin.txt
NAME_OF_FIRST_GUESS_S_FILE = logSreal.txt #firstGuessSin.txt

### ----- Sources and Stations ---- ###
NAME_OF_STATIONS_FILE = coordStatsReal.txt
NAME_OF_SHOTS_FILE = coordShotsReal.txt

### ----- Build prior ----- ###
BUILD_PRIOR = 1  # If BUILD_PRIOR = 1 : store the most significant coefficients of the wavelet transform of the first guess profile(s)
                 #        and use A_PRIOR to define the maximum variation range of these coefficients during the algorithm. 
                 # If BUILD_PRIOR = 0 load the prior features file : NAME_OF_PRIOR_FEATURES_FILE
A_PRIOR = 0.3 #0.4   # Factor used to create the prior from the wavelet transform of the first guess
                 # If coeffs[i] > 0 :
                 # (1-A_PRIOR)coeffs[i] < wavelet coefficients number i generated by the algorithm < (1+A_PRIOR)coeffs[i]
NAME_OF_PRIOR_FEATURES_FILE = priorFeaturesHaarWIDE.txt
                 
### -- Find optimum grid -- ###
FIND_OPTIMUM_GRID = 1 # if FIND_OPTIMUM_GRID = 1 : decimate the filtered first guess curve iteratively and run the eikonal for 
                      # shot number SHOT_NUMBER each time to determine nx,ny and nzFilt to use. We compare with a references precise
                      # grid defined with : nx = NXREF, ny = NYREF and nz = number of points in first guess profile(s).
                      #   if FIND_OPTIMUM_GRID = 0 use : 
                      #        noXptdtsd = NUMBER_OF_X_POINTS_TO_DESCRIBE_THE_SMALLEST_DISTANCE
                      #        noYptdtsd = NUMBER_OF_Y_POINTS_TO_DESCRIBE_THE_SMALLEST_DISTANCE
                      #        nzFilt = NZFILT
SHOT_NUMBER_REF = 0   # Shot used to find the optimum grid
NXREF = 100           # For the precise reference grid nx = NXREF
NYREF = 100           # For the precise reference grid ny = NYREF
NOXPTDTSDVEC = 10 #20 #10,30,40,50   -> Nx values to test
NOYPTDTSDVEC = 10 #20 #10,30,40,50   -> Ny values to test
NZFILTVEC = 75 #150 #100,200,250,300
NUMBER_OF_X_POINTS_TO_DESCRIBE_THE_SMALLEST_DISTANCE_DEFAULT = 4   # Default value used if FIND_OPTIMUM_GRID = 0
NUMBER_OF_Y_POINTS_TO_DESCRIBE_THE_SMALLEST_DISTANCE_DEFAULT = 4   # Default value used if FIND_OPTIMUM_GRID = 0
NZFILT_DEFAULT = 275                                               # Default value used if FIND_OPTIMUM_GRID = 0

### --- Analytical run --- ###
ANALYTICAL_RUN = 0        # If 1 : the times are calculated from the profile(s) : NAME_OF_REAL_PROFILE_FILE_* 
                          # If 0 : we use observed arrival times given in the NAME_OF_TIMES_FILE
NAME_OF_REAL_PROFILE_FILE_P = realPhomo512.txt
NAME_OF_REAL_PROFILE_FILE_S = realShomo512.txt
NAME_OF_TIMES_FILE = pickReal.txt

### --- Eikonal options --- ###
EPSIN = 5.0                   # For the Eikonal, radius in number of grid points arround source where spherical approximation will be used
NSWEEPS = 0                   # For the Eikonal, number of sweeps over model. 0 or 1 is in general enough

### --- Wavelet options --- ###
NDWTS = 20       # Number of DWT Stages for InverseWaveletTransform
WAVELET = haar # Wavelet used
# The Following Wavelets are in the Database: haar, db1, db2, db3, db4, db5, db6, db7, db8, db9, db10, db11, db12, db13, db14,
# db15, bior1.1, bio1.3, bior1.5, bior2.2, bior2.4,bior2.6,bior2.8, bior3.1, bior3.3, bior3.5, bior3.7, bior3.9, bior4.4,
# bior5.5, bior6.8, coif1, coif2, coif3, coif4, coif5. */

### --- Other options --- ###
USE_DEFAULT_SEED = 0         # 1 to use the default seed given later. Otherwise the seed used is given by time(null)
DEFAULT_SEED = 1369652831    # seed to use if USE_DEFAULT_SEED 1
TEST = 0                     # To run the program without enter the Eikonal but generating random energies uniformly distributed between...
MIN_E_TEST = 10.0            # ...that value...
MAX_E_TEST = 200.0           # ...and that value (and we set 50% probability of swapping)
COORD_TOL = 0.5              # This drives the ranges taken at the side of the grid. For u refering to x or y :
                             # If the sources/receivers highest u coordinates is umax and the lowest u coordinates is u min we let a
                             # range COORD_TOL*(umax-umin) before umin and after umax
                             # -> Should be something like 0.5 ! If it is too small the eikonal bugs

